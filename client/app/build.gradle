apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

apply plugin: 'kotlin-kapt'

apply from: 'dependencies.gradle'

android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "com.shafic.challenge"
        minSdkVersion 21
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    dataBinding {
        enabled = true
    }
    signingConfigs {
        //Add keystore for production here 
        debug {
            Properties props = loadPropertiesFromFile("./config/dev.properties")
            storeFile file(props["storeFile"])
            storePassword props["storePassword"]
            keyAlias props["keyAlias"]
            keyPassword props["keyPassword"]
        }
        release {
            Properties props = loadPropertiesFromFile("./config/prod.properties")
            storeFile file(props["storeFile"])
            storePassword props["storePassword"]
            keyAlias props["keyAlias"]
            keyPassword props["keyPassword"]
        }
    }
    buildTypes {
        debug {
            signingConfig signingConfigs.debug

            Properties props = loadPropertiesFromFile("./config/dev.properties")
            buildConfigField("String", "BASE_URL", props["base_url"])
            buildConfigField("String", "API_PATH_EXTENSION", props["api_path_extension"])
        }
        release {
            //REPLACE WITH PRODUCTION KEYSTORE
            signingConfig signingConfigs.release

            minifyEnabled true

            Properties props = loadPropertiesFromFile("./config/prod.properties")
            buildConfigField("String", "BASE_URL", props["base_url"])
            buildConfigField("String", "API_PATH_EXTENSION", props["api_path_extension"])

            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {

    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation androidSupportDependencies.values()
    implementation kotlinDependencies.values()
    implementation archComponentsDependencies.values()
    implementation mapsDependencies.values()
    implementation networkDependencies.values()
    implementation rxJavaDependencies.values()
    implementation othersDependencies.values()

    kapt annotationProcessors.values()

    testImplementation networkTestingDependencies.values()
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
}

// Method to Load Keys from a file using its path
def loadPropertiesFromFile(String filePath) {
    Properties props = new Properties()
    props.load(new FileInputStream(file(project.file(filePath))))
    return props
}
