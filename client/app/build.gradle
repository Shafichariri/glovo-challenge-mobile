apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "com.shafic.challenge"
        minSdkVersion 21
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    dataBinding {
        enabled = true
    }
    signingConfigs {
        //Add keystore for production here 
        debug {
            storeFile rootProject.file('debug.keystore')
            keyAlias 'androiddebugkey'
            keyPassword 'android'
            storePassword 'android'
        }
    }
    buildTypes {
        debug {
            signingConfig signingConfigs.debug
            
            Properties props = loadPropertiesFromFile("./config/dev.properties")
            buildConfigField("String", "BASE_URL", props["base_url"])
            buildConfigField("String", "API_PATH_EXTENSION", props["api_path_extension"])
        }
        release {
            //replace with keystore for production here
            signingConfig signingConfigs.debug
            
            minifyEnabled false
            
            Properties props = loadPropertiesFromFile("./config/prod.properties")
            buildConfigField("String", "BASE_URL", props["base_url"])
            buildConfigField("String", "API_PATH_EXTENSION", props["api_path_extension"])
            
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

project.ext {
    androidSupportVersion = '28.0.0'
    retrofitVersion = '2.5.0'
    okhttpVersion = '3.12.0'
    lifecycleVersion = '1.1.1'
}

dependencies {
//    def lifecycleVersion = "2.0.0"
    
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$project.kotlinVersion"
    implementation "com.android.support:appcompat-v7:$project.androidSupportVersion"
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    //Added to use same version for all support dependencies
    //['play-services-maps' depends on some libraries from 26.1.0
    implementation "com.android.support:support-v4:$project.androidSupportVersion"
    implementation "com.android.support:animated-vector-drawable:$project.androidSupportVersion"
    implementation "com.android.support:support-media-compat:$project.androidSupportVersion"
    implementation "com.android.support:recyclerview-v7:$project.androidSupportVersion"
    
    
    //Arch. components: Lifecycle
    implementation "android.arch.lifecycle:runtime:$project.lifecycleVersion"
    implementation "android.arch.lifecycle:extensions:$project.lifecycleVersion"
    kapt "android.arch.lifecycle:compiler:$project.lifecycleVersion"
    
    //Google Maps SDK
    implementation 'com.google.android.gms:play-services-maps:16.0.0'
    implementation "com.google.android.gms:play-services-location:16.0.0"
    //Map Utils
    implementation 'com.google.maps.android:android-maps-utils:0.5+'
    
    //Parser
    implementation 'com.google.code.gson:gson:2.8.5'
    
    //Network Library
    implementation("com.squareup.retrofit2:retrofit:$project.retrofitVersion") {
        // exclude Retrofitâ€™s OkHttp peer-dependency module and define your own module import
        exclude module: 'okhttp'
    }

    //OkHttp
    implementation "com.squareup.okhttp3:okhttp:$project.okhttpVersion"
    implementation "com.squareup.okhttp3:logging-interceptor:$project.okhttpVersion"

    //RxJava Retrofit plugins
    implementation "com.squareup.retrofit2:adapter-rxjava2:$project.retrofitVersion"
    implementation "com.squareup.retrofit2:converter-gson:$project.retrofitVersion"
    implementation "com.squareup.retrofit2:converter-java8:$project.retrofitVersion"
    
    //ReactiveX Implementation
    implementation 'io.reactivex.rxjava2:rxandroid:2.1.0'
    implementation 'io.reactivex.rxjava2:rxjava:2.2.4'
    implementation 'io.reactivex.rxjava2:rxkotlin:2.3.0'

    implementation 'com.vanniktech:rxpermission:0.6.0'
    implementation 'com.vanniktech:rxpermission:0.7.0-SNAPSHOT'
    
    testImplementation "com.squareup.okhttp3:mockwebserver:$project.okhttpVersion"
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
}

// Method to Load Keys from a file using its path
def loadPropertiesFromFile(String filePath) {
    Properties props = new Properties()
    props.load(new FileInputStream(file(project.file(filePath))))
    return props
}
